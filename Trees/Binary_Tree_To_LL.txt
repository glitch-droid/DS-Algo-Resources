#include<bits/stdc++.h>
using namespace std;

class node{
    public:
            node* lChild;
            int data;
            node* rChild;
};

void createTree(node* root){
    int x;
    queue<node*> q;
    node* p;
    node* t;
    cout<<"Enter Root Value : ";
    cin>>x;
    root->data = x;
    root->lChild = nullptr;
    root->rChild = nullptr;
    q.push(root);
    
    while(!q.empty()){
        p=q.front();
        q.pop();
        
        cout<<"Enter LeftChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->lChild = t;
            q.push(t);
        }
        
        cout<<"Enter RightChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->rChild = t;
            q.push(t);
        }
    }
}

node* head= nullptr;
node* ptr = nullptr;

void addNode(int val){
    node* t=new node;
    t->data = val;
    t->lChild = nullptr;
    t->rChild = nullptr;
    if(head==nullptr){
        head= t;
        ptr=t;
    }else{
        ptr->rChild=t;
        ptr=t;
    }
}

void preOrder(node* p){
    if(p){
        preOrder(p->lChild);
        addNode(p->data);
        preOrder(p->rChild);
    }else{
        return;
    }
}

void printList(){
    ptr=head;
    while(ptr){
        cout<<ptr->data<<" ";
        ptr=ptr->rChild;
    }
    cout<<endl;
}

int main(){
    node* root=new node;
    createTree(root);
    preOrder(root);
    printList();
}