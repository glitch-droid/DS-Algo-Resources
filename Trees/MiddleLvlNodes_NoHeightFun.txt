#include<bits/stdc++.h>
using namespace std;

class node{
    public:
            node* lChild;
            int data;
            node* rChild;
};

void createTree(node* root){
    int x;
    queue<node*> q;
    node* p;
    node* t;
    cout<<"Enter Root Value : ";
    cin>>x;
    root->data = x;
    root->lChild = nullptr;
    root->rChild = nullptr;
    q.push(root);
    
    while(!q.empty()){
        p=q.front();
        q.pop();
        
        cout<<"Enter LeftChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->lChild = t;
            q.push(t);
        }
        
        cout<<"Enter RightChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->rChild = t;
            q.push(t);
        }
    }
}

void printMiddleLvlNodes(node* a, node* b){
    if(!a || !b)
        return ;
    if(b->lChild == nullptr && b->rChild == nullptr){
        cout<<a->data<<" ";
        return;
    }
    printMiddleLvlNodes(a->lChild,b->lChild->lChild);
    printMiddleLvlNodes(a->rChild,b->lChild->lChild);
}

int main(){
    
    node* root = new node;
    createTree(root);
    printMiddleLvlNodes(root,root);
    return 0;
}