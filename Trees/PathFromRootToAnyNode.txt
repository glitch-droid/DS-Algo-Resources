#include<bits/stdc++.h>
using namespace std;

class node{
    public:
            node* lChild;
            int data;
            node* rChild;
};

void createTree(node* root){
    int x;
    queue<node*> q;
    node* p;
    node* t;
    cout<<"Enter Root Value : ";
    cin>>x;
    root->data = x;
    root->lChild = nullptr;
    root->rChild = nullptr;
    q.push(root);
    
    while(!q.empty()){
        p=q.front();
        q.pop();
        
        cout<<"Enter LeftChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->lChild = t;
            q.push(t);
        }
        
        cout<<"Enter RightChild of "<<p->data<<" : ";
        cin>>x;
        if(x!=-1){
            t=new node;
            t->data = x;
            t->lChild = nullptr;
            t->rChild = nullptr;
            p->rChild = t;
            q.push(t);
        }
    }
}

bool findPath(node* p,vector<int> &v, int k){
    if(p==nullptr)
        return false;
    v.push_back(p->data);
    
    if(p->data == k)
        return true;
    if(findPath(p->lChild,v,k) || findPath(p->rChild,v,k))
        return true;
    v.pop_back();
    return false;
}

int main(){
    
    node* root = new node;
    createTree(root);
    vector<int> v={};
    int k;
    cin>>k;
    if(findPath(root,v,k)){
        for(int i=0;i<v.size();i++)
            cout<<v[i]<<" ->";
    }
    else{
        cout<<"Element cannot be found";
    }
    return 0;
}