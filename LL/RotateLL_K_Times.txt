#include<iostream>
using namespace std;

class node
{
    public:
            int data;
            node* next;
};

node* create()
{
   int n;
   node* first=nullptr;
   node* t;
   node* p;
   while(1)
   {
       cin>>n;
       if(n<0)
        break;
       else
       {
           t=new node;
           t->data=n;
           t->next=nullptr;
           if(first==nullptr)
           {
               first=t;
               p=first;
           }
           p->next=t;
           p=t;
       }
   }
   p->next=first;
   return first;
}


void display(node* p)
{
    int x=p->data;
    node* t=p;
    do
    {
        cout<<t->data<<" ";
        t=t->next;
    }while(t->data!=x);
    cout<<endl;
}
int dig(node* p)
{
    int x=p->data;
    node* t=p;
    int m=0;
    do
    {
        m++;
        t=t->next;
    }while(t->data!=x);
    return m;
}

void nRotate(node* first, int n)
{
    node* t=first;
    int tNodes=dig(first);
    if(n>tNodes)
        n=n%tNodes;
    n=tNodes-n;
    for(int i=1;i<=n;i++)
        t=t->next;
    first=t;
    display(first);
}
int main()
{
    node* h=create();
    int n;
    cin>>n;
    nRotate(h,n);
}